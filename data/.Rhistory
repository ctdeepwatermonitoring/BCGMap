parse_fstat<-function(fstat_lines,skip='#',delim='\t'){
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x),stringsAsFactors=F);
colnames(D)<-header;
for(i in x+2:length(fstat_lines)){
r<-strsplit(fstat_lines[i],delim)[[1]];
D[i-x-1,1:length(r)]<-r;
}
D
}
qwdata<- parse_fstat(readLines(/Users/tbecker/Downloads/qwdata.txt))
qwdata<- parse_fstat(readLines("/Users/tbecker/Downloads/qwdata.txt"))
fstat_lines<-readLines('/Users/tbecker/Downloads/qwdata.txt')
skip='#'
data_pos='2'
delim='\t'
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos,stringsAsFactors=F));
colnames(D)<-header;
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos),stringsAsFactors=F);
colnames(D)<-header;
header
colnames(D)
length(header)
x
x-data_pos
data_pos
data_pos=2
x-data_pos
length(fstat_lines)-x-data_pos
length(fstat_lines)-x
header
fstat_lines[x]
fstat_lines[x+data_pos]
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos+1),stringsAsFactors=F);
colnames(D)<-header;
colnames(D)
colnames(D)
i=x+data_pos
dtat_lines[i]
ftat_lines[i]
fstat_lines[i]
r<-strsplit(fstat_lines[i],delim)[[1]]
r
i-x-data_pos
i-x-data_pos+1
D[i-x-data_pos+1,1:length(r)]<-r;
D[1]
D[1,]
D[1:2,]
D[1:3,]
D[1:3,]
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x-data_pos+1),stringsAsFactors=F);
colnames(D)<-header;
for(i in x+data_pos:length(fstat_lines)){
r<-strsplit(fstat_lines[i],delim)[[1]];
D[i-x-data_pos+1,1:length(r)]<-r;
}
i
x
install.packages("ssh")
library(ssh)
install.packages("~/Downloads/ssh_0.3.tgz", repos = NULL, type = .Platform$pkgType)
library(ssh)
install.packages("~/Downloads/ssh_0.3(1).tgz", repos = NULL, type = .Platform$pkgType)
library(ssh)
install.packages("~/Downloads/ssh_0.2.tar.gz", repos = NULL, type = "source")
library(ssh)
library(RCurl)
install.packages("ssh", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(ssh)
install.packages("RMariaDB", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/BCGMap/data")
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
BCG[1:10,]
BugBCG<-BCG[BCG$SAMPLE==BUG,]
BugBCG<-BCG[BCG$SAMPLE=='BUG',]
library(dplyr)
BugBCG<-group_by(BugBCG,STA_SEQ,METRIC_VALUE)
BugBCG[1:10,]
BugBCG<-group_by(BugBCG,STA_SEQ)
BugBCG[1:10,]
BugBCG<-summarise(BugBCG,AvgBCG=mean(METRIC_VALUE))
BugBCG
BugBCG
BugBCG[40:100,]
library(reshape2)
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/BCGMap/data")
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
BugBCG<-BCG[BCG$SAMPLE=='BUG',]
BugBCG<-aggregate(BugBCG,by=c("STA_SEQ","METRIC_VALUE"),FUN=mean,na.rm=TRUE)
BugBCG<-aggregate(BugBCG,by=list("STA_SEQ","METRIC_VALUE"),FUN=mean,na.rm=TRUE)
class(BugBCG$STA_SEQ)
BugBCG<-BCG[BCG$SAMPLE=='BUG',]
transform(BugBCG,STA_SEQ=as.character(STA_SEQ))
BugBCG<-transform(BugBCG,STA_SEQ=as.character(STA_SEQ))
BugBCG<-aggregate(BugBCG,by=list("STA_SEQ","METRIC_VALUE"),FUN=mean,na.rm=TRUE)
BugBCG<- BugBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE))
BugBCG
BugBCG<- BugBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n(METRIC_VALUE))
BugBCG<- BugBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
BugBCG<-BCG[BCG$SAMPLE=='BUG',]
BugBCG<- BugBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())
BugBCG
BugBCG[1:20,]
BugBCG[20:40,]
BugBCG<- BugBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
BugBCG<-BCG[BCG$SAMPLE=='BUG',]
AvgBugBCG<- BugBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgBugBCG
dim(AvgBugBCG)
unique(AvgBugBCG$STA_SEQ)
AvgBugBCG<- merge(AvgBugBCG,sites,by.x="STA_SEQ")
AvgBugBCG[1:10,]
FishBCG<-BCG[BCG$SAMPLE=='FISH',]
FishBCG
FishBCG[1:10,]
AvgFishBCG<- FishBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgFishBCG[1:10,]
AvgFishBCG<- merge(AvgFishBCG,sites,by.x="STA_SEQ")
AvgFishBCG
AvgFishBCG[1:10,]
names(AvgBugBCG)
class(AvgBugBCG$YLat)
setwd("/Users/tbecker/Documents/Projects/2018/FishTempViz")
dataMap<-read.csv("sites.csv",header=TRUE)
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/BCGMap/data")
library(dplyr)
library(rgdal)
library(OpenStreetMap)
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
BugBCG<-BCG[BCG$SAMPLE=='BUG',]
AvgBugBCG<- BugBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgBugBCG<- merge(AvgBugBCG,sites,by.x="STA_SEQ")
AvgBugBCG$YLat  <- as.numeric(AvgBugBCG$YLat)
AvgBugBCG$XLong  <- as.numeric(AvgBugBCG$XLong)
AvgBugBCG.SP  <- SpatialPointsDataFrame(AvgBugBCG[,c(7,6)],
AvgBugBCG[,-c(7,6)])
proj4string(AvgBugBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBugBCG.SP) # Now is class SpatialPointsDataFrame
plot(AvgBugBCG.SP)
writeOGR(AvgBugBCG.SP,"BugBCGsites",layer="AvgBugBCG", driver='GeoJSON')
FishBCG<-BCG[BCG$SAMPLE=='FISH',]
AvgFishBCG<- FishBCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgFishBCG<- merge(AvgFishBCG,sites,by.x="STA_SEQ")
#Make sure coordinates are numeric.  Create a SpatialPointsDataFrame
AvgFishBCG$YLat  <- as.numeric(AvgFishBCG$YLat)
AvgFishBCG$XLong  <- as.numeric(AvgFishBCG$XLong)
AvgFishBCG.SP  <- SpatialPointsDataFrame(AvgFishBCG[,c(7,6)],
AvgFishBCG[,-c(7,6)])
proj4string(AvgFishBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgFishBCG.SP) # Now is class SpatialPointsDataFrame
#Write as geojson
writeOGR(AvgFishBCG.SP,"FishBCGsites",layer="AvgFishBCG", driver='GeoJSON')
setwd("/Users/tbecker/Documents/Projects/GitHubProjects/BCGMap/data")
library(dplyr)
library(rgdal)
library(OpenStreetMap)
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
AvgBCG<- BCG %>%
group_by(STA_SEQ) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgBCG<- merge(AvgBCG,sites,by.x="STA_SEQ")
AvgBCG$YLat  <- as.numeric(AvgBCG$YLat)
AvgBCG$XLong  <- as.numeric(AvgBCG$XLong)
AvgBCG.SP  <- SpatialPointsDataFrame(AvgBCG[,c(7,6)],
AvgBCG[,-c(7,6)])
proj4string(AvgBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBCG.SP) # Now is class SpatialPointsDataFrame
#Write as geojson
writeOGR(AvgBCG.SP,"BCGsites",layer="AvgBCG", driver='GeoJSON')
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
names(BCG)
BCG[1:10,]
AvgBCG<- BCG %>%
group_by(STA_SEQ,SAMPLE) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgBCG<- merge(AvgBCG,sites,by.x="STA_SEQ")
AvgBCG
AvgBCG[1:10,]
names(AvgBCG)
AvgBCG$YLat  <- as.numeric(AvgBCG$YLat)
AvgBCG$XLong  <- as.numeric(AvgBCG$XLong)
AvgBCG.SP  <- SpatialPointsDataFrame(AvgBCG[,c(8,7)],
AvgBCG[,-c(8,7)])
proj4string(AvgBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBCG.SP) # Now is class SpatialPointsDataFrame
#Write as geojson
writeOGR(AvgBCG.SP,"BCGsites.geojson",layer="AvgBCG", driver='GeoJSON')
AvgBCG$YLat  <- as.numeric(AvgBCG$YLat)
AvgBCG$XLong  <- as.numeric(AvgBCG$XLong)
AvgBCG.SP  <- SpatialPointsDataFrame(AvgBCG[,c(8,7)],
AvgBCG[,-c(8,7)])
proj4string(AvgBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBCG.SP) # Now is class SpatialPointsDataFrame
#Write as geojson
writeOGR(AvgBCG.SP,"BCGsites",layer="AvgBCG", driver='GeoJSON')
AvgBCG<- merge(AvgBCG,sites,by.x="STA_SEQ")
#Make sure coordinates are numeric.  Create a SpatialPointsDataFrame
AvgBCG$YLat  <- as.numeric(AvgBCG$YLat)
AvgBCG$XLong  <- as.numeric(AvgBCG$XLong)
AvgBCG.SP  <- SpatialPointsDataFrame(AvgBCG[,c(8,7)],
AvgBCG[,-c(8,7)])
AvgBCG.SP
proj4string(AvgBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBCG.SP) # Now is class SpatialPointsDataFrame
writeOGR(AvgBCG.SP,"BCGsites",layer="AvgBCG", driver='GeoJSON')
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
AvgBCG<- BCG %>%
group_by(STA_SEQ,SAMPLE) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgBCG<- merge(AvgBCG,sites,by.x="STA_SEQ")
#Make sure coordinates are numeric.  Create a SpatialPointsDataFrame
AvgBCG$YLat  <- as.numeric(AvgBCG$YLat)
AvgBCG$XLong  <- as.numeric(AvgBCG$XLong)
AvgBCG.SP  <- SpatialPointsDataFrame(AvgBCG[,c(8,7)],
AvgBCG[,-c(8,7)])
proj4string(AvgBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBCG.SP) # Now is class SpatialPointsDataFrame
#Write as geojson
writeOGR(AvgBCG.SP,"BCGsites",layer="AvgBCG", driver='GeoJSON')
AvgBCG[1:10,]
dim(AvgBCG)
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
AvgBCG<- BCG %>%
group_by(STA_SEQ,SAMPLE) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
AvgBCG
AvgBCG[1:10,]
AvgBCG<- merge(AvgBCG,sites,by.x="STA_SEQ")
AvgBCG[1:10,]
AvgBCG$YLat  <- as.numeric(AvgBCG$YLat)
AvgBCG$XLong  <- as.numeric(AvgBCG$XLong)
AvgBCG.SP  <- SpatialPointsDataFrame(AvgBCG[,c(7,6)],
AvgBCG[,-c(7,6)])
proj4string(AvgBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBCG.SP) # Now is class SpatialPointsDataFrame
AvgBCG[,c(7,6)]
AvgBCG[,c(8,7)]
BCG<-read.csv("FishBug_2018AssessmentData.csv",header=TRUE)
sites<-read.csv("sitesDB.csv",header=TRUE)
AvgBCG<- BCG %>%
group_by(STA_SEQ,SAMPLE) %>%
summarise(AvgBCG=mean(METRIC_VALUE),CntBCG=n())%>%
as.data.frame()
dim(AvgBCG)
AvgBCG[1:10,]
AvgBCG<- merge(AvgBCG,sites,by.x="STA_SEQ")
AvgBCG$YLat  <- as.numeric(AvgBCG$YLat)
AvgBCG$XLong  <- as.numeric(AvgBCG$XLong)
AvgBCG.SP  <- SpatialPointsDataFrame(AvgBCG[,c(8,7)],
AvgBCG[,-c(8,7)])
proj4string(AvgBCG.SP) <- CRS("+proj=utm +zone=18 +datum=WGS84")
str(AvgBCG.SP) # Now is class SpatialPointsDataFrame
writeOGR(AvgBCG.SP,"BCGsites",layer="AvgBCG", driver='GeoJSON')
